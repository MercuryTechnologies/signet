name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  release:
    types:
      - created
jobs:
  meta:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - id: name
        run: "echo name=$( grep '^name: ' *.cabal | cut -d ' ' -f 2 ) >> $GITHUB_OUTPUT"
      - id: version
        run: "echo version=$( grep '^version:' *.cabal | cut -d ' ' -f 2 ) >> $GITHUB_OUTPUT"
    outputs:
      name: ${{ steps.name.outputs.name }}
      version: ${{ steps.version.outputs.version }}
  cabal:
    name: Cabal
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - run: cabal check
  gild:
    name: Gild
    needs: meta
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: tfausak/cabal-gild-setup-action@5aa7281b9e1d33818ed53230eef6f73dda3f89e1 # v2
      - run: cabal-gild --input ${{ needs.meta.outputs.name }}.cabal --mode check
  hlint:
    name: HLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: haskell-actions/hlint-setup@fe9cd1cd1af94a23900c06738e73f6ddb092966a # v2.4.10
      - uses: haskell-actions/hlint-run@eaca4cfbf4a69f4eb875df38b6bc3e1657020378 # v2.4.10
        with:
          fail-on: status
  ormolu:
    name: Ormolu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: haskell-actions/run-ormolu@c5eec49879ee294be01c787bcbf7b5a373a37060 # v17
  build:
    name: GHC ${{ matrix.ghc }} on ${{ matrix.os }}
    needs: meta
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - ghc: 9.12
            os: macos-latest
          - ghc: 9.8
            os: ubuntu-latest
          - ghc: '9.10'
            os: ubuntu-latest
          - ghc: 9.12
            os: ubuntu-latest
          - ghc: 9.12
            os: windows-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - run: mkdir artifact
      - uses: haskell/ghcup-setup@2860d0b41e2c5aa7d005bcbc2bd2506a09557ed8 # v1.2.2
        with:
          ghc: ${{ matrix.ghc }}
          cabal: latest
      - run: ghc-pkg list
      - run: cabal sdist --output-dir artifact
      - run: cabal configure --enable-documentation --enable-tests --flags=pedantic --haddock-for-hackage --jobs
      - run: cat cabal.project.local
      - run: cp cabal.project.local artifact
      - run: cabal update
      - run: cabal freeze
      - run: cat cabal.project.freeze
      - run: cp cabal.project.freeze artifact
      - run: cabal outdated --v2-freeze-file
      - uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          key: ${{ matrix.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
          path: ~/.local/state/cabal
          restore-keys: ${{ matrix.os }}-${{ matrix.ghc }}-
      - run: cabal build --only-download
      - run: cabal build --only-dependencies
      - run: cabal build
      - run: cp dist-newstyle/${{ needs.meta.outputs.name }}-${{ needs.meta.outputs.version }}-docs.tar.gz artifact
      - run: tar --create --file artifact.tar --verbose artifact
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ github.sha }}-${{ matrix.os }}-${{ matrix.ghc }}
          path: artifact.tar
      - run: cabal run -- signet-test-suite
  release:
    name: Release
    needs:
      - meta
      - build
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: ${{ github.sha }}-ubuntu-latest-9.12
      - run: tar --extract --file artifact.tar --verbose
      - if: ${{ github.event_name == 'release' }}
        uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836 # v2.3.3
        with:
          files: artifact/${{ needs.meta.outputs.name }}-${{ needs.meta.outputs.version }}.tar.gz
      - run: echo PUBLISH=${{ github.event_name == 'release' && '--publish' || '' }} >> $GITHUB_ENV
      - run: cabal upload $PUBLISH --token '${{ secrets.HACKAGE_TOKEN }}' artifact/${{ needs.meta.outputs.name }}-${{ needs.meta.outputs.version }}.tar.gz
      - run: cabal --http-transport=plain-http upload --documentation $PUBLISH --token '${{ secrets.HACKAGE_TOKEN }}' artifact/${{ needs.meta.outputs.name }}-${{ needs.meta.outputs.version }}-docs.tar.gz
